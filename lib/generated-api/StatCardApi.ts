//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming

export interface ApiResponse {
  statusCode: HttpStatusCode
  isSuccess: boolean
  errorMessages: string[]
  result: any
}

export enum HttpStatusCode {
  Continue = 100,
  SwitchingProtocols = 101,
  Processing = 102,
  EarlyHints = 103,
  OK = 200,
  Created = 201,
  Accepted = 202,
  NonAuthoritativeInformation = 203,
  NoContent = 204,
  ResetContent = 205,
  PartialContent = 206,
  MultiStatus = 207,
  AlreadyReported = 208,
  IMUsed = 226,
  MultipleChoices = 300,
  Ambiguous = 300,
  MovedPermanently = 301,
  Moved = 301,
  Found = 302,
  Redirect = 302,
  SeeOther = 303,
  RedirectMethod = 303,
  NotModified = 304,
  UseProxy = 305,
  Unused = 306,
  TemporaryRedirect = 307,
  RedirectKeepVerb = 307,
  PermanentRedirect = 308,
  BadRequest = 400,
  Unauthorized = 401,
  PaymentRequired = 402,
  Forbidden = 403,
  NotFound = 404,
  MethodNotAllowed = 405,
  NotAcceptable = 406,
  ProxyAuthenticationRequired = 407,
  RequestTimeout = 408,
  Conflict = 409,
  Gone = 410,
  LengthRequired = 411,
  PreconditionFailed = 412,
  RequestEntityTooLarge = 413,
  RequestUriTooLong = 414,
  UnsupportedMediaType = 415,
  RequestedRangeNotSatisfiable = 416,
  ExpectationFailed = 417,
  MisdirectedRequest = 421,
  UnprocessableEntity = 422,
  Locked = 423,
  FailedDependency = 424,
  UpgradeRequired = 426,
  PreconditionRequired = 428,
  TooManyRequests = 429,
  RequestHeaderFieldsTooLarge = 431,
  UnavailableForLegalReasons = 451,
  InternalServerError = 500,
  NotImplemented = 501,
  BadGateway = 502,
  ServiceUnavailable = 503,
  GatewayTimeout = 504,
  HttpVersionNotSupported = 505,
  VariantAlsoNegotiates = 506,
  InsufficientStorage = 507,
  LoopDetected = 508,
  NotExtended = 510,
  NetworkAuthenticationRequired = 511,
}

export interface CharacterStats {
  characterName: string
  avgItemLevel: number
  realm: string
  avatarUrl?: string | undefined
  renderUrl?: string | undefined
  health?: number | undefined
  strength?: number | undefined
  agility?: number | undefined
  intellect?: number | undefined
  stamina?: number | undefined
  meleeCrit?: number | undefined
  meleeHaste?: number | undefined
  mastery?: number | undefined
  bonusArmor?: number | undefined
  lifesteal?: number | undefined
  versatility?: number | undefined
  attackPower?: number | undefined
  mainHandDamageMin?: number | undefined
  mainHandDamageMax?: number | undefined
  mainHandSpeed?: number | undefined
  mainHandDps?: number | undefined
  offHandDamageMin?: number | undefined
  offHandDamageMax?: number | undefined
  offHandSpeed?: number | undefined
  offHandDps?: number | undefined
  spellPower?: number | undefined
  spellCrit?: number | undefined
  armor?: number | undefined
}

export interface StatCardDto extends CharacterStats {
  id?: number | undefined
  cardName: string
  characterName: string
  avatarUrl: string
  renderUrl: string
  userEmail: string
  factionId: FactionEnum
}

export enum FactionEnum {
  Alliance = 1,
  Horde = 2,
}
